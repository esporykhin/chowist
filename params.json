{"name":"Cisco Chef","tagline":"Pick a restaurant already!","body":"ciscochef\r\n=========\r\n\r\n[![Build Status](https://travis-ci.org/huangsam/ciscochef.png?branch=master)](https://travis-ci.org/huangsam/ciscochef) [![Dependency Status](https://gemnasium.com/huangsam/ciscochef.png)](https://gemnasium.com/huangsam/ciscochef) [![Coverage Status](https://coveralls.io/repos/huangsam/ciscochef/badge.png?branch=master)](https://coveralls.io/r/huangsam/ciscochef?branch=master)\r\n\r\nThis is a [web application](http://ciscochef.herokuapp.com/) that\r\nshows a dynamically created map of places that Cisco coworkers\r\nhave deemed worthy of eating at around the San Jose campus.\r\nIt's responsive, meaning that it will look great on computers,\r\nsmartphones and tablets. This map will benefit not only employees\r\nat Cisco, but also people around the Bay Area.\r\n\r\n[Click here](https://github.com/huangsam/ciscochef/wiki) to check\r\nout the project wiki!\r\n\r\n### Ruby version\r\n\r\nSo far, the app has been tested on Ruby 1.9.3, 2.0.0 and 2.1.0\r\nsuccessfully. Your mileage may vary when using other versions.\r\n\r\n### System dependencies\r\n\r\n[RailsInstaller](http://railsinstaller.com/) is a good place to start\r\nfor Windows users. Mac owners should be fine skipping down to the\r\nDeployment Instructions section.\r\n\r\n### Configuration\r\n\r\nThese are the configuration that are used to connect to the database:\r\n\r\n- `MONGOHQ_URL` - MongoHQ add-on from Heroku, standalone variable\r\n- `MONGO_HOST` - Manually injected Mongo IP Address (use w/ port)\r\n- `MONGO_PORT` - Manually injected Mongo Port Number\r\n- `CISCOCHEF_DB_1_PORT_27017_TCP_ADDR` - Fig Mongo IP Address (use w/ port)\r\n- `CISCOCHEF_DB_1_PORT_27017_TCP_PORT` - FIg Mongo Port Number\r\n\r\nA Mongo ORM like `mongoid` has not been deployed yet, so please run\r\n`mongoimport --db ciscochef --collection places --file test.json --jsonArray`\r\nin an existing mongo server process on your computer.\r\n\r\n### How to run the test suite\r\n\r\n`bundle exec rspec spec` should have a complete test suite that runs\r\nsuccessfully on the environment of your choice, given that you have\r\nfinished the data import from above.\r\n\r\n### Deployment instructions\r\n\r\n#### Local Machine\r\n\r\n`bundle install` should get all the necessary dependencies. Do not\r\ninclude `Gemfile.lock` when you push on Windows - it will cause Travis CI\r\nto fail.\r\n\r\n`rails s` should do the trick - defaulting the port over to 3000. If you\r\nneed a different port, then do `rails s -p ${PORT}`. Feel free to do\r\n`foreman start` instead, which closely reflects the production\r\nenvironment on Heroku. Windows users should use foreman v0.61,\r\nsince anything above that version is Windows-incompatible.\r\n\r\n#### Vagrant Machine\r\n\r\n`vagrant up` and `vagrant ssh` should get you into a self-provisioned\r\nmachine. Once you are inside, go into the project repository and run\r\n`fig up` or `fig up -d`. Fig will produce a properly working set\r\nof services for running Cisco Chef as a containerized application.\r\n","google":"UA-47367815-1","note":"Don't delete this file! It's used internally to help with page regeneration."}