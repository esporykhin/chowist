{"name":"Cisco Chef","tagline":"Pick a restaurant already!","body":"ciscochef\r\n=========\r\n\r\n[![Build Status](https://travis-ci.org/huangsam/ciscochef.png?branch=master)](https://travis-ci.org/huangsam/ciscochef) [![Dependency Status](https://gemnasium.com/huangsam/ciscochef.png)](https://gemnasium.com/huangsam/ciscochef) [![Coverage Status](https://coveralls.io/repos/huangsam/ciscochef/badge.png?branch=master)](https://coveralls.io/r/huangsam/ciscochef?branch=master)\r\n\r\nThis is a [web application](http://ciscochef.herokuapp.com/) that\r\nshows a dynamically created map of places that my Cisco coworkers\r\nand I have deemed worthy of eating at around the San Jose campus.\r\nIt's responsive, meaning that it will look great on computers,\r\nsmartphones and tablets. This map will benefit not only employees\r\nat Cisco, but also people around the Bay Area.\r\n\r\n[Click here](https://github.com/huangsam/ciscochef/wiki) to check\r\nout the project wiki!\r\n\r\n### Ruby version\r\n\r\nSo far, I have tested the app on both Ruby 1.9.3, 2.0.0 and 2.1.0\r\nsuccessfully. Your mileage may vary when using otherwise.\r\n\r\n### System dependencies\r\n\r\n[RailsInstaller](http://railsinstaller.com/) is a good place to start\r\nif you're missing something.\r\n\r\n### Configuration\r\n\r\nConfiguration to deal with Heroku's MongoHQ platform is the following:\r\n`url = ENV['MONGOHQ_URL'] || 'mongodb://127.0.0.1:27017/ciscochef'`\r\n\r\nSince I did not deploy a Mongo ORM like `mongoid` yet, the implication\r\nis that you will need to execute\r\n`mongoimport --db ciscochef --collection places --file test.json --jsonArray`\r\nin an existing mongo server process on your computer. To\r\nlearn more about MongoDB, [click here](http://docs.mongodb.org/manual/) for\r\ndocumentation.\r\n\r\n### How to run the test suite\r\n\r\n`bundle exec rspec spec` should have a complete test suite that\r\nruns successfully on the environment of your choice, given\r\nthat you have already done the necessary import of JSON data.\r\n\r\n### Deployment instructions\r\n\r\n#### Local Machine\r\n\r\n`bundle install` should get all the necessary dependencies. Do not\r\ninclude `Gemfile.lock` when you push on Windows - it will cause Travis CI\r\nto fail as mentioned\r\n[here](http://stackoverflow.com/questions/3642085/make-bundler-use-different-gems-for-different-platforms).\r\n\r\n`rails s` should do the trick - defaulting the port over to 3000. If you\r\nneed a different port, then do `rails s -p ${PORT}`. If you want to use\r\n[foreman](https://github.com/ddollar/foreman), feel free to do\r\n`foreman start` instead. This most closely reflects the production\r\nenvironment on Heroku. One note for Windows users: make sure to use only\r\nforeman version 0.61, since anything above that particular version\r\nis incompatible with Windows.\r\n\r\n#### Vagrant Machine\r\n\r\n`vagrant up` and `vagrant ssh` should get you into a self-provisioned\r\nmachine. Once you are inside, go into the project repository and run\r\n`fig up` or `fig up -d`. This should produce a properly working set\r\nof services for running Cisco Chef as a containerized application.\r\n","google":"UA-47367815-1","note":"Don't delete this file! It's used internally to help with page regeneration."}